#!/bin/bash
#Description: Command line tool to manage your notes with the Zim desktop wiki (http://zim-wiki.org/)
#Source: https://github.com/nodiscc/scriptz
#License: MIT (http://opensource.org/licenses/MIT)

#TODO: add a snippet management mode like https://github.com/holman/boom
 
set -e
USAGE="USAGE: $0 [ -h|--help ] [ a|add ] [ t|tasks ] [ @ ] \"text\"
	$0 			Show all notes
	$0 -h, --help		Show this help message
	$0 a, add \"note text\"	Add \"note text\" in a new note
	$0 t, tasks		List todos/tasks in notes
	$0 @			List all tags
	$0 j			jump to notebook dir #todo 
	$0 \"text\"		Search notes for \"text\"
"

NS=`date +%Y:%m`
BN=`date +%d`
#Get default notebook path from config file
NOTEBOOK=`grep -A1 "Default" ~/.config/zim/notebooks.list | tail -n 1 | sed -e "s|~|$HOME|" -e "s|file://||g"`
#Ignore pages metadata
IGNOREPATTERN="Content-Type:|Wiki-Format:|Creation-Date:"

#List all notes, sorted
function _ListNotes() {
find "$NOTEBOOK" -name "*.txt" | sort| xargs cat | egrep -v "$IGNOREPATTERN" | less
}

#Add a note to the current day page in the notebook
#TODO: skip the quick note dialog
function _AddNote() {
zim --plugin quicknote notebook=Notes namespace="Calendar:$NS" basename="$BN" append=true text="$*"
}

#Filter/search in notes	
function _FilterNotes() {
egrep -ri --binary-files=without-match --color=always "$*" $NOTEBOOK | sort
}

#List all tags	
function _ListTags() {
	echo listtags
	egrep --binary-files=without-match --color=always --only-matching --no-filename -ir '@[^[:space:]]*' $NOTEBOOK |sort -u
}

#List all tasks	
function _ListTasks() {
	egrep --binary-files=without-match --color=always -ir "\[ ]|@todo" "$NOTEBOOK" |sed -e "s|$NOTEBOOK||g" -e "s|/Calendar/||g" -e "s/.txt//g" | sort
	find "$NOTEBOOK" -name todo.txt | xargs cat | egrep -v "$IGNOREPATTERN"
#TODO: ignore .bak files
#TODO: ignore striked @todos (encloed between ~~)
#TODO: get tasklist entries pattern (@todo, @fixme...) from config file
}

#TODO: zn do
	
function _Main() {
if [ "$1" = "h" -o "$1" = "--help" -o "$1" = "-h" ]
then echo "$USAGE"
elif [ "$1" = "a" -o "$1" = "add" ]
then shift; echo adding; _AddNote "$*"
elif [[ "$*" = "" ]]
then _ListNotes
elif [ "$1" = "t" -o "$1" = "tasks" ]
then _ListTasks
elif [[ "$1" = "@" ]]
then _ListTags
else _FilterNotes "$*"
fi
	}
	
_Main "$@"
